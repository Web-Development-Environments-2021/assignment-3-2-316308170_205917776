openapi: 3.0.3
info:
  version: '1.0.0'
  title: 'Web Development API'
  description: 'API for assignment 3.1'
  
tags: 
  - name: auth
  - name: league
  - name: matches
  - name: users
  - name: players
  - name: coaches
  - name: teams
  
paths:
  /auth/Login:
    post:
      tags:
        - auth
      summary: Logs into an user given an ID and password.
      description: 'user logs in using username and password.'
      requestBody:
        - name: username
          required: true
          schema:
            type: string
        - name: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'successful log in.'
        '401':
          description: 'username or password incorrect.'
  /auth/Logout:
    post:
      tags: 
      - auth
      summary: User logs out from the system.
      responses:
        '200':
          description: 'successful log out.'
        '401':
          description: 'log out failed.'
  /auth/Register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_register'
      responses:
        '201':
          description:  Added new user to the system.
        '400':
          description:  Wrong input.
          
  /league/get_upcoming_game:
    get:
      tags: 
        - league
      summary: Returns all relevant data for upcoming game preview.
      description: 'returns league name, season, stage and upcoming game data'
      responses:
        '200':
          description: 'successful fetched upcoming game details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/upcoming_game'
        '404':
          description: 'upcoming game data not found.'
  
  /users/favoriteMatches:
    get:
      tags: 
        - users
      summary: Returns all user's favorite matches.
      description: 'returns array of all favorite matches ids'
      responses:
        '200':
          description: 'successful fetched all favourite games ids.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/favourite_matches'
        '404':
          description: 'data not found.'
    post:
      tags: 
        - users
      summary: Add match to favorites.
      description: 'add match to user favourites list.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/favourite_add_match'
      responses:
        '201':
          description: 'succesfully added match to favourites.'
        '404':
          description: 'data not found.'
  /users/favoriteMatches/{match_id}:
    delete:
      tags: 
        - users
      summary: delete match from favorites.
      description: 'delete match from user's favorites given its id'
      parameters:
        - name: match_id
          required: true
          in: path
          description: 'match id'
          schema:
            type: integer
            example: 8
      responses:
        '200':
          description: 'successful deleted match id from favorites.'
        '404':
          description: 'data not found.'

  /users/favoritePlayers:
      get:
        tags: 
          - users
        summary: Returns all user's favorite players.
        description: 'returns array of all favorite players ids'
        responses:
          '200':
            description: 'successful fetched all favourite players ids.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/favourite_players'
          '404':
            description: 'data not found.'
      post:
        tags: 
          - users
        summary: Add player to favorites.
        description: 'add player to user favourites list.'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/favourite_add_player'
        responses:
          '201':
            description: 'succesfully added player to favourites.'
          '404':
            description: 'data not found.'
  /users/favoritePlayers/{player_id}:
    delete:
      tags: 
        - users
      summary: delete player from favorites.
      description: 'delete player from user's favorites given its id'
      parameters:
        - name: player_id
          required: true
          in: path
          description: 'player id'
          schema:
            type: integer
            example: 8
      responses:
        '200':
          description: 'successful deleted player id from favorites.'
        '404':
          description: 'data not found.'





    /matches:
      put:
        tags:
          - matches
        summary: Update match results.
        description: Get match ID and update values in match
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_match'
        responses:
          '201':
            description: 'Match updated.'
          '400':
            description: 'Wrong input.'
      post:
        tags:
          - matches
        summary: Create a match.
        description: Set a new match.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new_match'
        responses:
          '201':
            description: 'created game'
          '404':
            description: 'match not found'
            
    /matches/{match_id}:
      get:
        tags:
          - matches
        summary: Returns match details given it's ID.
        description: 'user provides match id and get all relevant info.'
        parameters:
          - name: match_id
            required: true
            in: path
            schema:
              type: integer
        responses:
          '200':
            description: 'successful fetched match info.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/game_details'
          '404':
            description: 'game data not found.'
      delete:
        tags:
          - matches
        summary: Delete a match.
        description: 'delete match from system.'
        parameters:
          - name: match_id
            required: true
            in: path
            schema:
              type: integer
        responses:
          '200':
            description: 'successful deleted match.'
          '404':
            description: 'match doesnt found.'      

    /players/{player_id}/preview:
      get:
        tags:
          - players
        summary: Returns players preview given it's ID.
        description: 'user provides player id and get its preview info.'
        parameters:
          - name: player_id
            required: true
            in: path
            schema:
              type: integer
        responses:
          '200':
            description: 'successful fetched player preview.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/player_preview'
          '404':
            description: 'player preview not found.'  
    /players/{player_id}/full_data:
        get:
          tags:
            - players
          summary: Returns players full data given it's ID.
          description: 'user provides player id and get its full info.'
          parameters:
            - name: player_id
              required: true
              in: path
              schema:
                type: integer
          responses:
            '200':
              description: 'successful fetched player full info.'
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/player_full_data'
            '404':
              description: 'player preview not found.'  
              
    /coaches/{coach_id}/preview:
      get:
        tags:
          - coaches
        summary: Returns coaches preview given it's ID.
        description: 'user provides coach id and get its preview info.'
        parameters:
          - name: coach_id
            required: true
            in: path
            schema:
              type: integer
        responses:
          '200':
            description: 'successful fetched coach preview.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/coach_preview'
          '404':
            description: 'coach preview not found.'  
    /coaches/{coach_id}/full_data:
      get:
        tags:
          - coaches
        summary: Returns coaches full data given it's ID.
        description: 'user provides coach id and get its full info.'
        parameters:
          - name: coach_id
            required: true
            in: path
            schema:
              type: integer
        responses:
          '200':
            description: 'successful fetched coach full data.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/coach_full_data'
          '404':
            description: 'player preview not found.'  
    /teams/{team_id}:
      get:
        tags:
        - teams
        summary: Return team data
        description: 'provide team id, get all players, history, etc.'
        parameters:
        - name: team_id
          required: true
          in: path
          schema:
            type: integer
              
        responses:
          '200':
            description: 'successful fetched team.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/team_data'
          '404':
            description: 'team not found.'  
            
    /players/search:
      get:
        tags: 
          - players
        summary: Search for a player
        description: 'find a player given a string query.'
        parameters:
          - name: keyword
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: 'found matching results.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/players_ids'
          '404':
            description: 'no match found.'
    /coach/search:
      get:
        tags: 
          - coaches
        summary: Search for a coach
        description: 'find a coach given a string query.'
        parameters:
          - name: keyword
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: 'found matching results.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/coaches_ids'
          '404':
            description: 'no match found.'
    /teams/search:
      get:
        tags: 
          - teams
        summary: Search for a team
        description: 'find a team given a string query.'
        parameters:
          - name: keyword
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: 'found matching results.'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/teams_ids'
          '404':
            description: 'no match found.'
  
components:
  schemas:
    user_register:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: 'using only letters'
          example: shiloari
          
        firstname:
          type: string
          example: Ariel
        
        lastname:
          type: string
          example: Shilo
          
        country:
          type: string
          example: Israel

        email:
          type: string
          example: qqq@qqq.com

        password:
          type: string
          minLength: 5
          maxLength: 10
          description: password must include at least 1 number and at least 1 special character.
          example: g@1ThePro
    
    upcoming_game:
      type: object
      properties:
        league_name:
          type: string
          example: 'SuperLiga'
        season:
          type: string
          example: '2011/12'
        stage:
          type: integer
          example: 36
        match_id:
          type: integer
          example: 123
    
    favourite_matches:
      type: array
      items:
        properties:
          match_id:
                type: integer
                description: match id
                example: 25
    favourite_add_match:
      type: object
      properties:
          match_id:
                type: integer
                description: match id
                example: 25
    favourite_players:
      type: array
      items:
        properties:
          match_id:
                type: integer
                description: player id
                example: 25
    favourite_add_player:
      type: object
      properties:
          match_id:
                type: integer
                description: player id
                example: 25
    favourite_teams:
      type: array
      items:
        properties:
          match_id:
                type: integer
                description: team id
                example: 25
    favourite_add_team:
      type: object
      properties:
          match_id:
                type: integer
                description: team id
                example: 25
                
    game_details:
      type: object
      properties:
        home_team_id:
          type: integer
          description: 'home team id'
          example: 1
        away_team_id:
          type: integer
          description: 'away team id'
          example: 2
        date:
          type: string
          description: 'match date'
          example: '14/05/2021'
        score:
          type: string
          description: 'match result (optional).'
          example: 'X:Y'
        stadium:
          type: string
          description: 'the stadium the match is played in.'
          example: 'Sami Ofer'
        event_book:
          type: string
          description: 'event book: all events that happend in the game as XML.'
          
    player_preview:
      type: object
      properties:
        full_name:
          type: string
          description: 'players full name'
          example: 'Gal Alkalay'
        team_name:
          type: integer
          description: 'team name'
          example: 'ms.Ashdod'
        photo_path:
          type: integer
          description: 'photo path'
          example: 'C:/photos/gal.mp3'
        position_number:
          type: integer
          description: 'position on field number'
          example: 7
    coach_preview:
      type: object
      properties:
        full_name:
          type: string
          description: 'coaches full name'
          example: 'Ariel Shilo'
        team_name:
            type: integer
            description: 'team name'
            example: 'ms.Ashdod'
        photo_path:
            type: integer
            description: 'photo path'
            example: 'C:/photos/gal.mp3'
    player_full_data:
        type: object
        properties:
          full_name:
            type: string
            description: 'players full name'
            example: 'Gal Alkalay'
          team_name:
            type: integer
            description: 'team name'
            example: 'ms.Ashdod'
          photo_path:
            type: integer
            description: 'photo path'
            example: 'C:/photos/gal.mp3'
          position_number:
            type: integer
            description: 'position on field number'
            example: 7
          common_name:
            type: string
            description: 'player nickname'
            example: 'La Pulga'
          nationality:
            type: string
            description: 'players nationality'
            example: 'Israeli'
          birth_country:
            type: string
            description: 'players origin country'
            example: 'Israel'
          birthdate:
            type: string
            description: 'players birth date'
            example: '15/04/1995'
          height:
            type: integer
            description: 'players height in cm'
            example: 190
          weight:
            type: integer
            description: 'players weight in kg'
            example: 80
    coach_full_data:
        type: object
        properties:
          full_name:
            type: string
            description: 'coaches full name'
            example: 'Gal Alkalay'
          team_name:
            type: integer
            description: 'team name'
            example: 'ms.Ashdod'
          photo_path:
            type: integer
            description: 'photo path'
            example: 'C:/photos/gal.mp3'
          common_name:
            type: string
            description: 'coach nickname'
            example: 'La Pulga'
          nationality:
            type: string
            description: 'coaches nationality'
            example: 'Israeli'
          birth_country:
            type: string
            description: 'coaches origin country'
            example: 'Israel'
          birthdate:
            type: string
            description: 'coaches birth date'
            example: '15/04/1995'
            
    update_match:
      type: object
      properties:
        match_id:
          type: integer
          description: "Match id to update."
          example: 3
        score:
          type: string
          description: match result (optional).
          example: 'X:Y'
        event_book:
          type: string
          description: 'event book: all events that happend in the game as XML.'
          
    new_match:
      type: object
      properties:
        home_team_id:
          type: integer
          description: home team id
          example: 1
        away_team_id:
          type: integer
          description: away team id
          example: 2
        date:
          type: string
          description: match date
          example: 14/05/2021
        score:
          type: string
          description: match result (optional).
          example: 'X:Y'
        stadium:
          type: string
          description: the stadium the match is played in.
          example: Sami Ofer
        event_book:
          type: string
          description: 'event book: all events that happend in the game as XML.'
          
    team_data:
      type: object
      properties:
        players_id:
          type: array
          items:
            type: integer
            description: array of player id.
            example: 13
        team_id:
          type: integer
          description: team id.
          example: 2
        team_name:
          type: string
          description: team name.
          example: "ms.Ashdod"
        coach_id:
          type: integer
          description: coach id.
          example: 14
        match_book:
          type: string
          description: 'match book: all matches of the team as XML.'
    
    players_ids:
      type: array
      items:
        properties:
          player_id:
                type: integer
                description: player id
                example: 25
          player_name:
                type: string
                description: player name
                example: 'Gal Alkalay'
    coaches_ids:
      type: array
      items:
        properties:
          coach_id:
                type: integer
                description: coach id
                example: 123
          coach_name:
                type: string
                description: Coach name
                example: 'Ariel Shilo'            
    teams_ids:
      type: array
      items:
        properties:
          team_id:
                type: integer
                description: team id
                example: 3
          team_name:
                type: string
                description: team name
                example: 'Maccabi Haifa'